services:
  mailserver:
    # image: ghcr.io/docker-mailserver/docker-mailserver:latest
    build: .
    container_name: mailserver
    # Provide the FQDN of your mail server here (Your DNS MX record should point to this value)
    hostname: smtp1.dev.linefeedr.com
    env_file: mailserver.env
    #environment:
    #  - LOG_LEVEL=trace
    # More information about the mail-server ports:
    # https://docker-mailserver.github.io/docker-mailserver/latest/config/security/understanding-the-ports/
    ports:
      # - "25:25"    # SMTP  (explicit TLS => STARTTLS, Authentication is DISABLED => use port 465/587 instead)
      # - "143:143"  # IMAP4 (explicit TLS => STARTTLS)
      - "465:465"  # ESMTP (implicit TLS)
      - "587:587"  # ESMTP (explicit TLS => STARTTLS)
      # - "993:993"  # IMAP4 (implicit TLS)
    volumes:
      # Config. You do the config by running `setup` commands inside the container.
      # But then this dir should go to git and be used to spin up new instances.
      - ./docker-data/dms/config/:/tmp/docker-mailserver/

      # Secrets (should not be included in git)
      - ./docker-data/letsencrypt/:/etc/letsencrypt/:ro

      # Readable runtime data
      - ./docker-data/dms/mail-data/:/var/mail/
      - ./docker-data/dms/mail-logs/:/var/log/mail/

      # Unreadable runtime data (internal formats, only persist it for restarts)
      # Do not bind as a directory on Macs, sockets will not work
      - mail-state:/var/mail-state/

      # Runtime environment
      - /etc/localtime:/etc/localtime:ro

    # restart: always
    stop_grace_period: 1m
    # Uncomment if using `ENABLE_FAIL2BAN=1`:
    # cap_add:
    #   - NET_ADMIN
    healthcheck:
      test: "ss --listening --tcp | grep -P 'LISTEN.+:smtp' || exit 1"
      timeout: 3s
      retries: 0

volumes:
  mail-state:
